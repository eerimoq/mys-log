# Levels.
OFF: u8 = 255
ERROR: u8 = 40
WARNING: u8 = 30
INFO: u8 = 20
DEBUG: u8 = 10

class Logger:
    """A logger.

    """

    _name: string
    _level: u8

    def __init__(self, name: string, level: u8 = INFO):
        self._name = name
        self._level = level

    def set_level(self, level: u8):
        """Set the logging level.

        """

        self._level = level

    def is_enabled_for(self, level: u8) -> bool:
        """Returns True is given level is enabled, otherwise False.

        """

        return level >= self._level

    @macro
    def error(self, message: string):
        self._log(message, ERROR, "ERROR")

    @macro
    def warning(self, message: string):
        self._log(message, WARNING, "WARNING")

    @macro
    def info(self, message: string):
        self._log(message, INFO, "INFO")

    @macro
    def debug(self, message: string):
        self._log(message, DEBUG, "DEBUG")

    @macro
    def _log(self, message: string, level: u8, level_string: string):
        if self.is_enabled_for(level):
            print(f"{self._name} {level_string}", message)

@macro
def file_line():
    """Log current file path and line number.

    """

    print(f"{__file__}:{__line__}:")
